name: Deploy to AWS EC2 with Environment Variables

on:
  push:
    branches:
      - main # 메인 브랜치에 푸시될 때 트리거

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Setting Front .env
        run: |
          cd front
          echo "VITE_MAP_CLIENT_ID=${{secrets.VITE_MAP_CLIENT_ID}}" >> .env
          echo "VITE_MAP_CLIENT_PASSWORD=${{ secrets.VITE_MAP_CLIENT_PASSWORD }}" >> .env
          echo "VITE_API=${{ secrets.VITE_API }}" >> .env
          echo "VITE_NAVER_MAP_URL=${{ secrets.VITE_NAVER_MAP_URL }}" >> .env

      - name: Install dependencies and build Frontend
        run: |
          cd front
          npm install
          npm run build

      - name: Setting Back .env
        run: |
          cd back
          echo "MYSQL_PASSWORD=${{secrets.MYSQL_PASSWORD}}" >> .env
          echo "NAVER_API_CLIENT_ID=${{ secrets.NAVER_API_CLIENT_ID }}" >> .env
          echo "NAVER_API_CLIENT_SECRET=${{ secrets.NAVER_API_CLIENT_SECRET }}" >> .env
          echo "RDS_DB_NAME=${{ secrets.RDS_DB_NAME }}" >> .env
          echo "RDS_USERNAME=${{ secrets.RDS_USERNAME }}" >> .env
          echo "RDS_PASSWORD=${{ secrets.RDS_PASSWORD }}" >> .env
          echo "RDS_HOSTNAME=${{ secrets.RDS_HOSTNAME }}" >> .env

      - name: Install dependencies for Backend
        run: |
          cd back
          npm install

      - name: Archive build artifacts
        run: |
          tar -czf deployment.tar.gz -C front/dist . -C ../back .

      - name: Copy files to the server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "deployment.tar.gz"
          target: "/"

      - name: Deploy application files and reload nginx
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /
            tar -xzf deployment.tar.gz
            pm2 restart all
            sudo systemctl reload nginx
